{"ast":null,"code":"var _jsxFileName = \"/home/carol/sd-07-project-trivia-react-redux/src/pages/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.fetchApi = this.fetchApi.bind(this);\n    this.state = {\n      name: '',\n      email: ''\n    };\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async fetchApi() {\n    const history = this.props.history;\n    const _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email;\n    const request = await fetch('https://opentdb.com/api_token.php?command=request');\n    const requestJson = await request.json();\n    const tokenCode = requestJson.token;\n    localStorage.setItem('token', tokenCode);\n    localStorage.setItem('state', JSON.stringify({\n      player: {\n        name,\n        assertions: 0,\n        score: 0,\n        gravatarEmail: email\n      }\n    }));\n    history.push('/game');\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          name = _this$state2.name,\n          email = _this$state2.email;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"input-player-name\",\n      name: \"name\",\n      placeholder: \"Nome\",\n      value: name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      \"data-testid\": \"btn-play\",\n      disabled: !email.length || !name.length,\n      onClick: this.fetchApi,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Jogar\"), React.createElement(Link, {\n      to: \"/settings\",\n      \"data-testid\": \"btn-settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Settings\"));\n  }\n\n}\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};","map":{"version":3,"sources":["/home/carol/sd-07-project-trivia-react-redux/src/pages/Login.js"],"names":["React","PropTypes","Link","Login","Component","constructor","props","handleChange","bind","fetchApi","state","name","email","event","target","value","setState","history","request","fetch","requestJson","json","tokenCode","token","localStorage","setItem","JSON","stringify","player","assertions","score","gravatarEmail","push","render","length","propTypes","shape","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.fetchApi = this.fetchApi.bind(this);\n    this.state = {\n      name: '',\n      email: '',\n    };\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  async fetchApi() {\n    const { history } = this.props;\n    const { name, email } = this.state;\n    const request = await fetch('https://opentdb.com/api_token.php?command=request');\n    const requestJson = await request.json();\n    const tokenCode = requestJson.token;\n    localStorage.setItem('token', tokenCode);\n    localStorage.setItem('state', JSON.stringify(\n      { player: { name, assertions: 0, score: 0, gravatarEmail: email } },\n    ));\n    history.push('/game');\n  }\n\n  render() {\n    const { name, email } = this.state;\n    return (\n      <div>\n        <input\n          type=\"text\"\n          data-testid=\"input-player-name\"\n          name=\"name\"\n          placeholder=\"Nome\"\n          value={ name }\n          onChange={ this.handleChange }\n        />\n        <input\n          type=\"email\"\n          data-testid=\"input-gravatar-email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={ email }\n          onChange={ this.handleChange }\n        />\n        <button\n          type=\"submit\"\n          data-testid=\"btn-play\"\n          disabled={ !email.length || !name.length }\n          onClick={ this.fetchApi }\n        >\n          Jogar\n        </button>\n        <Link to=\"/settings\" data-testid=\"btn-settings\">Settings</Link>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}