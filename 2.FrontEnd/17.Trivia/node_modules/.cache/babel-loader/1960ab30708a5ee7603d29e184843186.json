{"ast":null,"code":"var _jsxFileName = \"/home/carol/trybe-projects-front-end/2.FrontEnd/17.Trivia/src/pages/GamePage.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { fetchThunk } from '../redux/actions';\n\nclass GamePage extends Component {\n  constructor() {\n    super();\n    this.pergunta = this.pergunta.bind(this);\n    this.select = this.select.bind(this);\n    this.localset = this.localset.bind(this);\n    this.changeQUestionsAndFinnish = this.changeQUestionsAndFinnish.bind(this);\n    this.state = {\n      indexx: 0,\n      nextQuestion: false,\n      finnish: false,\n      time: 30,\n      count: true,\n      errado: {\n        border: '2px solid rgb(0, 0, 0)'\n      },\n      certo: {\n        border: '2px solid rgb(0, 0, 0)'\n      },\n      obj: {}\n    };\n  }\n\n  componentDidMount() {\n    const fetchHere = this.props.fetchHere;\n    const interval = 1000;\n    fetchHere();\n    this.localset();\n    setInterval(() => {\n      this.decrementar();\n    }, interval);\n  }\n\n  decrementar() {\n    const loading = this.props.loading;\n    const _this$state = this.state,\n          count = _this$state.count,\n          time = _this$state.time;\n\n    if (count && !loading && time > 0) {\n      this.setState(oldstate => ({\n        time: oldstate.time - 1\n      }));\n    }\n\n    if (time === 0) {\n      this.select('errado');\n    }\n  }\n\n  localset() {\n    const LS = JSON.parse(localStorage.getItem('state'));\n    this.setState({\n      obj: LS\n    });\n  }\n\n  select(pram, dif) {\n    const _this$state2 = this.state,\n          obj = _this$state2.obj,\n          time = _this$state2.time;\n    this.setState({\n      nextQuestion: true\n    });\n    let PD = 0;\n    this.setState({\n      errado: {\n        border: '3px solid rgb(255, 0, 0)'\n      },\n      certo: {\n        border: '3px solid rgb(6, 240, 15)'\n      },\n      count: false\n    });\n\n    switch (dif) {\n      case 'easy':\n        PD = 1;\n        break;\n\n      case 'medium':\n        PD = 2;\n        break;\n\n      case 'hard':\n        PD = 1 + 2;\n        break;\n\n      default:\n        break;\n    }\n\n    if (pram === 'certo') {\n      const pontos = 2 * 2 * 2 + 2 + time * PD;\n      const total = pontos + obj.player.score;\n      const acertos = obj.player.assertions + 1;\n      const objobj = obj;\n      objobj.player.score = total;\n      objobj.player.assertions = acertos;\n      this.setState({\n        obj: objobj\n      });\n      localStorage.setItem('state', JSON.stringify(objobj));\n    }\n  }\n\n  changeQUestionsAndFinnish() {\n    const indexx = this.state.indexx;\n    const numberFour = 4;\n\n    if (indexx === numberFour) {\n      this.setState({\n        finnish: true\n      });\n    } else {\n      this.setState(prevState => ({\n        indexx: prevState.indexx + 1,\n        nextQuestion: false,\n        time: 30,\n        count: true,\n        errado: {\n          border: '2px solid rgb(0, 0, 0)'\n        },\n        certo: {\n          border: '2px solid rgb(0, 0, 0)'\n        }\n      }));\n    }\n  }\n\n  pergunta() {\n    const questions = this.props.questions;\n    const _this$state3 = this.state,\n          indexx = _this$state3.indexx,\n          errado = _this$state3.errado,\n          certo = _this$state3.certo,\n          time = _this$state3.time,\n          count = _this$state3.count;\n    const questao = questions.results[indexx];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      \"data-testid\": \"question-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, questao.category), React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, questao.question), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      \"data-testid\": \"correct-answer\",\n      type: \"button\",\n      style: certo,\n      disabled: !count,\n      onClick: () => this.select('certo', questao.difficulty),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, questao.correct_answer), questao.incorrect_answers.map((msg, index) => React.createElement(\"button\", {\n      type: \"button\",\n      key: index,\n      style: errado,\n      disabled: !count,\n      \"data-testid\": `wrong-answer-${index}`,\n      onClick: () => this.select('errado'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, msg)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, `tempo: ${time}`)));\n  }\n\n  render() {\n    const loading = this.props.loading;\n    const _this$state4 = this.state,\n          nextQuestion = _this$state4.nextQuestion,\n          finnish = _this$state4.finnish;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), loading ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"loading\") : this.pergunta(), React.createElement(Link, {\n      to: \"/feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Feedback\"), nextQuestion && React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-next\",\n      onClick: this.changeQUestionsAndFinnish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Next\"), finnish && React.createElement(Redirect, {\n      to: \"/feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  questions: state.questions\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchHere: () => dispatch(fetchThunk(dispatch))\n});\n\nGamePage.propTypes = {\n  fetchHere: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  questions: PropTypes.shape({\n    responseCode: PropTypes.number.isRequired,\n    results: PropTypes.arrayOf(PropTypes.object).isRequired\n  }).isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(GamePage);","map":{"version":3,"sources":["/home/carol/trybe-projects-front-end/2.FrontEnd/17.Trivia/src/pages/GamePage.js"],"names":["React","Component","PropTypes","connect","Link","Redirect","Header","fetchThunk","GamePage","constructor","pergunta","bind","select","localset","changeQUestionsAndFinnish","state","indexx","nextQuestion","finnish","time","count","errado","border","certo","obj","componentDidMount","fetchHere","props","interval","setInterval","decrementar","loading","setState","oldstate","LS","JSON","parse","localStorage","getItem","pram","dif","PD","pontos","total","player","score","acertos","assertions","objobj","setItem","stringify","numberFour","prevState","questions","questao","results","category","question","difficulty","correct_answer","incorrect_answers","map","msg","index","render","mapStateToProps","mapDispatchToProps","dispatch","propTypes","func","isRequired","bool","shape","responseCode","number","arrayOf","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { fetchThunk } from '../redux/actions';\n\nclass GamePage extends Component {\n  constructor() {\n    super();\n    this.pergunta = this.pergunta.bind(this);\n    this.select = this.select.bind(this);\n    this.localset = this.localset.bind(this);\n    this.changeQUestionsAndFinnish = this.changeQUestionsAndFinnish.bind(this);\n    this.state = {\n      indexx: 0,\n      nextQuestion: false,\n      finnish: false,\n      time: 30,\n      count: true,\n      errado: { border: '2px solid rgb(0, 0, 0)' },\n      certo: { border: '2px solid rgb(0, 0, 0)' },\n      obj: {},\n    };\n  }\n\n  componentDidMount() {\n    const { fetchHere } = this.props;\n    const interval = 1000;\n    fetchHere();\n    this.localset();\n    setInterval(() => {\n      this.decrementar();\n    }, interval);\n  }\n\n  decrementar() {\n    const { loading } = this.props;\n    const { count, time } = this.state;\n    if (count && !loading && time > 0) {\n      this.setState((oldstate) => ({ time: oldstate.time - 1 }));\n    }\n    if (time === 0) {\n      this.select('errado');\n    }\n  }\n\n  localset() {\n    const LS = JSON.parse(localStorage.getItem('state'));\n    this.setState({ obj: LS });\n  }\n\n  select(pram, dif) {\n    const { obj, time } = this.state;\n    this.setState({ nextQuestion: true });\n    let PD = 0;\n    this.setState({\n      errado: { border: '3px solid rgb(255, 0, 0)' },\n      certo: { border: '3px solid rgb(6, 240, 15)' },\n      count: false,\n    });\n    switch (dif) {\n    case 'easy':\n      PD = 1;\n      break;\n    case 'medium':\n      PD = 2;\n      break;\n    case 'hard':\n      PD = (1 + 2);\n      break;\n    default:\n      break;\n    }\n    if (pram === 'certo') {\n      const pontos = (2 * 2 * 2 + 2) + (time * PD);\n      const total = pontos + obj.player.score;\n      const acertos = obj.player.assertions + 1;\n      const objobj = obj;\n      objobj.player.score = total;\n      objobj.player.assertions = acertos;\n      this.setState({ obj: objobj });\n      localStorage.setItem('state', JSON.stringify(objobj));\n    }\n  }\n\n  changeQUestionsAndFinnish() {\n    const { indexx } = this.state;\n    const numberFour = 4;\n    if (indexx === numberFour) {\n      this.setState({ finnish: true });\n    } else {\n      this.setState((prevState) => ({\n        indexx: prevState.indexx + 1,\n        nextQuestion: false,\n        time: 30,\n        count: true,\n        errado: { border: '2px solid rgb(0, 0, 0)' },\n        certo: { border: '2px solid rgb(0, 0, 0)' } }\n      ));\n    }\n  }\n\n  pergunta() {\n    const { questions } = this.props;\n    const { indexx, errado, certo, time, count } = this.state;\n    const questao = questions.results[indexx];\n    return (\n      <div>\n        <p data-testid=\"question-category\">{ questao.category }</p>\n        <p data-testid=\"question-text\">{ questao.question }</p>\n        <div>\n          <button\n            data-testid=\"correct-answer\"\n            type=\"button\"\n            style={ certo }\n            disabled={ !count }\n            onClick={ () => this.select('certo', questao.difficulty) }\n          >\n            {questao.correct_answer}\n          </button>\n          { questao.incorrect_answers.map((msg, index) => (\n            <button\n              type=\"button\"\n              key={ index }\n              style={ errado }\n              disabled={ !count }\n              data-testid={ `wrong-answer-${index}` }\n              onClick={ () => this.select('errado') }\n            >\n              {msg}\n            </button>\n          ))}\n          <p>{`tempo: ${time}`}</p>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { loading } = this.props;\n    const { nextQuestion, finnish } = this.state;\n    return (\n      <div>\n        <Header />\n        { loading ? <p>loading</p> : this.pergunta() }\n        <Link to=\"/feedback\">Feedback</Link>\n        {nextQuestion && (\n          <button\n            type=\"button\"\n            data-testid=\"btn-next\"\n            onClick={ this.changeQUestionsAndFinnish }\n          >\n            Next\n          </button>\n        )}\n        {finnish && <Redirect to=\"/feedback\" />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.loading,\n  questions: state.questions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchHere: () => dispatch(fetchThunk(dispatch)),\n});\n\nGamePage.propTypes = {\n  fetchHere: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  questions: PropTypes.shape({\n    responseCode: PropTypes.number.isRequired,\n    results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GamePage);\n"]},"metadata":{},"sourceType":"module"}