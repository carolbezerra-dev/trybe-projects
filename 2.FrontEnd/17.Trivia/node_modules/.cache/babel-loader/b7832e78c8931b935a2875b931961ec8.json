{"ast":null,"code":"var _jsxFileName = \"/home/carol/sd-07-project-trivia-react-redux/src/pages/GamePage.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { fetchThunk } from '../redux/actions';\n\nclass GamePage extends Component {\n  constructor() {\n    super();\n    this.pergunta = this.pergunta.bind(this);\n    this.state = {\n      indexx: 0\n    };\n  }\n\n  componentDidMount() {\n    const fetchHere = this.props.fetchHere;\n    fetchHere();\n  }\n\n  pergunta() {\n    const questions = this.props.questions;\n    const indexx = this.state.indexx;\n    const questao = questions.results[indexx];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      \"data-testid\": \"question-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, questao.category), React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, questao.question), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      \"data-testid\": \"correct-answer\",\n      type: \"button\",\n      onClick: () => console.log('ritapediu'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, questao.correct_answer), questao.incorrect_answers.map((msg, index) => React.createElement(\"button\", {\n      type: \"button\",\n      key: index,\n      \"data-testid\": `wrong-answer-${index}`,\n      onClick: () => console.log('carolpediu'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, msg))));\n  }\n\n  render() {\n    const loading = this.props.loading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), loading ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"loading\") : this.pergunta(), React.createElement(Link, {\n      to: \"/feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Feedback\"), React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Next\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  questions: state.questions\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchHere: () => dispatch(fetchThunk(dispatch))\n});\n\nGamePage.propTypes = {\n  fetchHere: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  questions: PropTypes.shape({\n    responseCode: PropTypes.number.isRequired,\n    results: PropTypes.arrayOf(PropTypes.object).isRequired\n  }).isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(GamePage);","map":{"version":3,"sources":["/home/carol/sd-07-project-trivia-react-redux/src/pages/GamePage.js"],"names":["React","Component","PropTypes","connect","Link","Header","fetchThunk","GamePage","constructor","pergunta","bind","state","indexx","componentDidMount","fetchHere","props","questions","questao","results","category","question","console","log","correct_answer","incorrect_answers","map","msg","index","render","loading","mapStateToProps","mapDispatchToProps","dispatch","propTypes","func","isRequired","bool","shape","responseCode","number","arrayOf","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { fetchThunk } from '../redux/actions';\n\nclass GamePage extends Component {\n  constructor() {\n    super();\n    this.pergunta = this.pergunta.bind(this);\n    this.state = {\n      indexx: 0,\n    };\n  }\n\n  componentDidMount() {\n    const { fetchHere } = this.props;\n    fetchHere();\n  }\n\n  pergunta() {\n    const { questions } = this.props;\n    const { indexx } = this.state;\n    const questao = questions.results[indexx];\n    return (\n      <div>\n        <p data-testid=\"question-category\">{ questao.category }</p>\n        <p data-testid=\"question-text\">{ questao.question }</p>\n        <div>\n          <button\n            data-testid=\"correct-answer\"\n            type=\"button\"\n            onClick={ () => console.log('ritapediu') }\n          >\n            {questao.correct_answer}\n          </button>\n          { questao.incorrect_answers.map((msg, index) => (\n            <button\n              type=\"button\"\n              key={ index }\n              data-testid={ `wrong-answer-${index}` }\n              onClick={ () => console.log('carolpediu') }\n            >\n              {msg}\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { loading } = this.props;\n    return (\n      <div>\n        <Header />\n        { loading ? <p>loading</p> : this.pergunta() }\n        <Link to=\"/feedback\">Feedback</Link>\n        <button type=\"button\" data-testid=\"btn-next\">Next</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.loading,\n  questions: state.questions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchHere: () => dispatch(fetchThunk(dispatch)),\n});\n\nGamePage.propTypes = {\n  fetchHere: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  questions: PropTypes.shape({\n    responseCode: PropTypes.number.isRequired,\n    results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GamePage);\n"]},"metadata":{},"sourceType":"module"}